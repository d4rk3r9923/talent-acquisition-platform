{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills are relevant to Business Development Intern?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Business Development Intern\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the categories of skills that a person named Alex has?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Alex\"})-[:Has]->(s:Skills) RETURN DISTINCT s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in the position of Financial Analyst?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Financial Analyst\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that have experience in Python and have description Data Analysis?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Data Analysis\", description: \"Data Analysis\"})-[:Relevant_to]->(s:Skills {NAME: \"Python\"}) RETURN pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a certification in Cloud Computing?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: 'Cloud Computing'}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all the people who have achieved a publication in the category of Data Science?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: 'Data Science'}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills does John have that are relevant to more than one position?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Has]->(s:Skills)-[:Relevant_to]->(pos1:Position)-[:Relevant_to]->(pos2:Position) WHERE pos1.NAME <> pos2.NAME RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory, pos1.NAME AS PositionName1, pos2.NAME AS PositionName2"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the work places that have Java as a skill?"}, {"role": "assistant", "content": "MATCH (wp:WorkPlace)-[:Worked_at]->(p:Person)-[:Has]->(s:Skills {NAME: \"Java\"}) RETURN wp.NAME AS WorkPlaceName, wp.domain_expertise AS WorkPlaceDomainExpertise, wp.size AS WorkPlaceSize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of people who have achieved certifications in Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Artificial Intelligence\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications relevant to Data Mining?"}, {"role": "assistant", "content": "MATCH (s:Skills {NAME: \"Data Mining\"})-[:Relevant_to]->(c:Certification) RETURN s.NAME AS SkillName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the location of John?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"}) RETURN p.location AS Location"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that are relevant to the Product Manager position?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Product Manager\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills are relevant to Business Intelligence Developer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Business Intelligence Developer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "How many employees does the company that has been worked at by people who have achieved a certification in the category of Data Analysis?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Data Analysis\"})-[:Worked_at]->(wp:WorkPlace) RETURN wp.size AS CompanySize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has a skill in jQuery Mobile?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"jQuery Mobile\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have a skill in Machine Learning and have a certification in Data Science?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Machine Learning\"})-[:Achieve]->(c:Certification {CATEGORY: \"Data Science\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and have a skill in Java?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"})-[:Has]->(s:Skills {NAME: \"Java\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills are relevant to Customer Service Manager?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Customer Service Manager\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills are relevant to Account Assistant?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Account Assistant\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the name of the person who has worked at the workplace with the domain expertise of Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Artificial Intelligence\"}) RETURN p.name AS PersonName, w.NAME AS WorkplaceName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have studied at a university in the field of Google Analytics?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {Field: 'Google Analytics'}) RETURN p.name AS PersonName, e.NAME AS EducationName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the categories of publications that Jane has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: 'Jane'})-[:Achieve]->(pub:Publication) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the work places of a person named Logan who has worked at Netflix?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Logan\"})-[:Worked_at]->(wp:WorkPlace {NAME: \"Netflix\"}) RETURN p.name AS PersonName, wp.NAME AS WorkPlaceName, wp.domain_expertise AS WorkPlaceDomainExpertise, wp.size AS WorkPlaceSize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the name of the company where Isaac worked?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Isaac\"})-[:Worked_at]->(wp:WorkPlace) RETURN p.name AS PersonName, wp.NAME AS WorkPlaceName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all the people who have studied at a university with a degree Master?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {DEGREE: \"Master\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the skills that John has in the category of Programming and are relevant to both Software Engineer and Data Scientist and have a level of Advanced?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Has]->(s:Skills {category: \"Programming\", level: \"Advanced\"})-[:Relevant_to]->(pos1:Position {NAME: \"Software Engineer\"})-[:Relevant_to]->(pos2:Position {NAME: \"Data Scientist\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory, s.level AS SkillLevel, pos1.NAME AS PositionName1, pos2.NAME AS PositionName2"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Sales?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Sales\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that are relevant to the certifications that John has achieved and his work experience as a Human Resources Manager?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Experience]->(pos:Position {NAME: \"Human Resources Manager\"})-[:Relevant_to]->(s:Skills)<-[:Relevant_to]-(c:Certification) RETURN p.name AS PersonName, pos.NAME AS PositionName, c.CATEGORY AS CertificationCategory, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who studied at a university with a degree of Master?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {DEGREE: \"Master\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Web Development?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Web Development\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the educations that Frank has studied at and what are his achievements?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Frank\"})-[:Study_at]->(edu:Education) RETURN p.name AS PersonName, edu.NAME AS EducationName, edu.achievement AS Achievement"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the publications that Michael has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Michael\"})-[:Achieve]->(pub:Publication) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Human Resources?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Human Resources\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a publication in the field of Computer Science?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Computer Science\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the skills that John and Emily have in common?"}, {"role": "assistant", "content": "MATCH (p1:Person {name: \"John\"})-[:Has]->(s:Skills), (p2:Person {name: \"Emily\"})-[:Has]->(s) RETURN s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company in the domain of Machine Learning?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Machine Learning\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have a certification in Data Science and have worked at a company in the Finance domain?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Data Science\"})-[:Worked_at]->(wp:WorkPlace {domain_expertise: \"Finance\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the skills that Rachel has?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Rachel\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Software Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Software Engineering\"}) RETURN p.name AS PersonName, pos.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the Computer Vision Engineer position?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Computer Vision Engineer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills are relevant to Software Engineer, Data Scientist, Programmer, Data Analyst, Machine Learning Engineer, Natural Language Processing Engineer, and Computer Vision Engineer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Software Engineer\"})-[:Relevant_to]->(s:Skills), (pos2:Position {NAME: \"Data Scientist\"})-[:Relevant_to]->(s2:Skills), (pos3:Position {NAME: \"Programmer\"})-[:Relevant_to]->(s3:Skills), (pos4:Position {NAME: \"Data Analyst\"})-[:Relevant_to]->(s4:Skills), (pos5:Position {NAME: \"Machine Learning Engineer\"})-[:Relevant_to]->(s5:Skills), (pos6:Position {NAME: \"Natural Language Processing Engineer\"})-[:Relevant_to]->(s6:Skills), (pos7:Position {NAME: \"Computer Vision Engineer\"})-[:Relevant_to]->(s7:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory, pos2.NAME AS PositionName2, s2.NAME AS SkillName2, s2.category AS SkillCategory2, pos3.NAME AS PositionName3, s3.NAME AS SkillName3, s3.category AS SkillCategory3, pos4.NAME AS PositionName4, s4.NAME AS SkillName4, s4.category AS SkillCategory4, pos5.NAME AS PositionName5, s5.NAME AS SkillName5, s5.category AS SkillCategory5, pos6.NAME AS PositionName6, s6.NAME AS SkillName6, s6.category AS SkillCategory6, pos7.NAME AS PositionName7, s7.NAME AS SkillName7, s7.category AS SkillCategory7"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications that have been achieved by people who have worked at RSM?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"RSM\"})-[:Achieve]->(pub:Publication) RETURN pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have studied at a university in the field of Computer Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {Field: \"Computer Engineering\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications that a person with the skill Artificial Intelligence has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Artificial Intelligence\"})-[:Achieve]->(pub:Publication) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the name of the person who has the most experience in the field of Data Governance?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(e:Position {NAME: \"Data Governance\"}) RETURN p.name AS PersonName, COUNT(e) AS NumExperiences ORDER BY NumExperiences DESC LIMIT 1"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a publication in Sales?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Sales\"}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that are relevant to the skills that An has?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"An\"})-[:Has]->(s:Skills)-[:Relevant_to]->(pos:Position) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory, pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills relevant to the position of Business Analyst?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Business Analyst\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of the people who have achieved a publication in the category of Machine Learning?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Machine Learning\"}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have studied at a university with a field of expertise in Data Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {Field: \"Data Engineering\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and have a skill in Machine Learning?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"})-[:Has]->(s:Skills {NAME: \"Machine Learning\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and have a education in Computer Science and a skill in Java for more than 5 years?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at {duration: 5}]->(wp:WorkPlace {NAME: \"Google\"})-[:Study_at]->(e:Education {NAME: \"Computer Science\"})-[:Has]->(s:Skills {NAME: \"Java\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the educations that John has studied at?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Study_at]->(e:Education) RETURN p.name AS PersonName, e.NAME AS EducationName, e.Field AS EducationField"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company with a size of 5000-10000 employees?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {size: \"5000-10000\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the Data Architect position?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Data Architect\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications relevant to Data Science?"}, {"role": "assistant", "content": "MATCH (s:Skills {NAME: \"Data Science\"})-[:Relevant_to]->(c:Certification) RETURN s.NAME AS SkillName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of a Artificial Intelligence Engineer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Artificial Intelligence Engineer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What education does John have in Computer Science, Programming, Data Science, Artificial Intelligence, Machine Learning, and Natural Language Processing?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Study_at]->(e:Education {Field: \"Computer Science\"}), (p)-[:Has]->(s:Skills {category: \"Programming\"}), (p)-[:Has]->(s2:Skills {category: \"Data Science\"}), (p)-[:Has]->(s3:Skills {category: \"Artificial Intelligence\"}), (p)-[:Has]->(s4:Skills {category: \"Machine Learning\"}), (p)-[:Has]->(s5:Skills {category: \"Natural Language Processing\"}) RETURN p.name AS PersonName, e.NAME AS EducationName, e.Field AS EducationField, s.NAME AS SkillName, s.category AS SkillCategory, s2.NAME AS SkillName2, s2.category AS SkillCategory2, s3.NAME AS SkillName3, s3.category AS SkillCategory3, s4.NAME AS SkillName4, s4.category AS SkillCategory4, s5.NAME AS SkillName5, s5.category AS SkillCategory5"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a publication in Marketing?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Marketing\"}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the top 5 skills for Product Owners?"}, {"role": "assistant", "content": "MATCH (p:Position {NAME: \"Product Owner\"})-[:Relevant_to]->(s:Skills) RETURN s.NAME AS SkillName, COUNT(s) AS Count ORDER BY Count DESC LIMIT 5"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a certification in Data Science, Artificial Intelligence, and Data Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Data Science\"})-[:Relevant_to]->(s:Skills)-[:Relevant_to]->(c2:Certification {CATEGORY: \"Artificial Intelligence\"})-[:Relevant_to]->(s2:Skills)-[:Relevant_to]->(c3:Certification {CATEGORY: \"Data Engineering\"}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory, c2.CATEGORY AS CertificationCategory2, c3.CATEGORY AS CertificationCategory3"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills relevant to the position of IT Consultant?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"IT Consultant\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications that Helen has achieved in the field of Computer Science?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Helen\"})-[:Achieve]->(pub:Publication {CATEGORY: \"Computer Science\"}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the positions that require Java skill?"}, {"role": "assistant", "content": "MATCH (pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Java\"}) RETURN pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications relevant to DevOps Engineer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"DevOps Engineer\"})-[:Relevant_to]->(pub:Publication) RETURN pos.NAME AS PositionName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has achieved a publication in Data Mining?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Data Mining\"})-[:Relevant_to]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the publications that Ethan has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Ethan\"})-[:Achieve]->(pub:Publication) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that people who have worked at Google have?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, wp.NAME AS WorkPlaceName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have worked at Apple?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {NAME: 'Apple'}) RETURN p.name AS PersonName, w.NAME AS WorkPlaceName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What work places has Michael worked at that are relevant to Sales?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Michael\"})-[:Worked_at]->(w:WorkPlace)-[:Relevant_to]->(s:Skills {NAME: \"Sales\"}) RETURN p.name AS PersonName, w.NAME AS WorkPlaceName, w.domain_expertise AS WorkPlaceDomainExpertise"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the position of the person who worked at Dell?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {NAME: \"Dell\"})-[:Experience]->(pos:Position) RETURN p.name AS PersonName, pos.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in the position of Information Technology Researcher?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Information Technology Researcher\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications that Alexander has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Alexander\"})-[:Achieve]->(pub:Publication) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have studied in the field of Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {Field: \"Artificial Intelligence\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company with domain expertise in Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {domain_expertise: \"Artificial Intelligence\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who worked at a company with more than 1000 employees?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {size: \"1000\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the Frontend Developer position?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Frontend Developer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that are relevant to the skill of Computer Networks?"}, {"role": "assistant", "content": "MATCH (s:Skills {NAME: \"Computer Networks\"})-[:Relevant_to]->(p:Position) RETURN s.NAME AS SkillName, p.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications that a person who has studied at MIT has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {NAME: \"MIT\"})-[:Achieve]->(c:Certification) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of the people who have achieved a publication in the category of Human-Computer Interaction?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Human-Computer Interaction\"}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a workplace with domain expertise in Finance?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {domain_expertise: \"Finance\"}) RETURN p.name AS PersonName, wp.NAME AS WorkPlaceName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that are relevant to the position of Data Scientist?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: 'Data Scientist'})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications that have been achieved by people who have worked at Mindtree?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Mindtree\"})-[:Achieve]->(pub:Publication) RETURN pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What institutions has John attended?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Study_at]->(e:Education) RETURN p.name AS PersonName, e.NAME AS EducationName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have a certification in Data Science and have worked at Google?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Data Science\"})-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have a certification in the category of Data Science?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: 'Data Science'}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the name of the person who has achieved the most publications in the category of Machine Learning?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Machine Learning\"}) RETURN p.name AS PersonName, COUNT(pub) AS NumberOfPublications ORDER BY NumberOfPublications DESC LIMIT 1"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at companies with more than 1000 employees?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {size: \"1000+\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that a person named Alex has experience in that are relevant to a skill named Business Analysis?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Alex\"})-[:Experience]->(pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Business Analysis\"}) RETURN p.name AS PersonName, pos.NAME AS PositionName, pos.description AS PositionDescription, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a certification in Artificial Intelligence and have a skill in Data Engineering, Machine Learning, and Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Artificial Intelligence\"})-[:Relevant_to]->(s:Skills {NAME: \"Data Engineering\"})-[:Relevant_to]->(s2:Skills {NAME: \"Machine Learning\"})-[:Relevant_to]->(s3:Skills {NAME: \"Artificial Intelligence\"}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory, s.NAME AS SkillName, s2.NAME AS SkillName2, s3.NAME AS SkillName3"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Data Analysis?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Data Analysis\"}) RETURN p.name AS PersonName, pos.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications that are relevant to Data Scientist and have category Data Science?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Data Scientist\"})-[:Relevant_to]->(c:Certification {CATEGORY: \"Data Science\"}) RETURN pos.NAME AS PositionName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications that are relevant to the skills of Data Analyst?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Data Analyst\"})-[:Relevant_to]->(s:Skills)-[:Relevant_to]->(c:Certification) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the domain expertise of the workplace where John has worked?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Worked_at]->(wp:WorkPlace) RETURN wp.domain_expertise AS DomainExpertise"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have a skill in the category of Business Analysis?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {category: 'Business Analysis'}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the educations that have field Computer Science and have name MIT?"}, {"role": "assistant", "content": "MATCH (e:Education {Field: \"Computer Science\", NAME: \"MIT\"}) RETURN e.NAME AS EducationName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that John has that are relevant to both Software Engineer and Data Scientist?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Has]->(s:Skills)-[:Relevant_to]->(pos1:Position {NAME: \"Software Engineer\"})-[:Relevant_to]->(pos2:Position {NAME: \"Data Scientist\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have studied at an education with field in Computer Science?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(ed:Education {Field: \"Computer Science\"}) RETURN DISTINCT p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the skills that John has?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and their experience, education, and achievements?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"})-[:Study_at]->(e:Education) RETURN p.name AS PersonName, wp.duration AS WorkPlaceDuration, e.NAME AS EducationName, wp.achievements AS WorkPlaceAchievements"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company in the domain expertise of Human Resources?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Human Resources\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Machine Learning Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Machine Learning Engineer\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the publications that Benjamin has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Benjamin\"})-[:Achieve]->(pub:Publication) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of a Chief Information Officer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Chief Information Officer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have skills in Statistics?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Statistics\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a certification with a category of 'Finance'?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Finance\"}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the skills that John has in the category of Programming and are relevant to both Software Engineer and Data Scientist?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Has]->(s:Skills {category: \"Programming\"})-[:Relevant_to]->(pos1:Position {NAME: \"Software Engineer\"})-[:Relevant_to]->(pos2:Position {NAME: \"Data Scientist\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory, pos1.NAME AS PositionName1, pos2.NAME AS PositionName2"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have achieved a publication in the category of Information Retrieval?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: 'Information Retrieval'}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the most common skills for Product Managers?"}, {"role": "assistant", "content": "MATCH (p:Position {NAME: \"Product Manager\"})-[:Relevant_to]->(s:Skills) RETURN s.NAME AS SkillName, COUNT(s) AS Count ORDER BY Count DESC"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What positions has John Doe held?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John Doe\"})-[:Experience]->(pos:Position) RETURN p.name AS PersonName, pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the positions that An has experienced and are relevant to Python and Machine Learning?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"An\"})-[:Experience]->(pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Python\"})-[:Relevant_to]->(wp:WorkPlace {NAME: \"Machine Learning\"}) RETURN p.name AS PersonName, pos.NAME AS PositionName, pos.description AS PositionDescription, s.NAME AS SkillName, wp.NAME AS WorkPlaceName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the categories of publications that Bob has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Bob\"})-[:Achieve]->(pub:Publication) RETURN DISTINCT pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and their experience, job responsibilities, and achievements?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"}) RETURN p.name AS PersonName, wp.duration AS WorkPlaceDuration, wp.responsibilities AS WorkPlaceResponsibilities, wp.achievements AS WorkPlaceAchievements"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What education has Charlie had?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Charlie\"})-[:Study_at]->(e:Education) RETURN p.name AS PersonName, e.NAME AS EducationName, e.Field AS EducationField"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company with a size of 5000-10000 employees and have a skill in Java?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {size: \"5000-10000\"})-[:Has]->(s:Skills {NAME: \"Java\"}) RETURN p.name AS PersonName, w.NAME AS WorkPlaceName, s.NAME AS SkillName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who studied at a university with a grade of A?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Study_at]->(e:Education {grade: \"A\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that require Java?"}, {"role": "assistant", "content": "MATCH (pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Java\"}) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has achieved a publication in Computer Vision?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Computer Vision\"})-[:Relevant_to]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the work places that Kevin has worked at?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Kevin\"})-[:Worked_at]->(wp:WorkPlace) RETURN p.name AS PersonName, wp.NAME AS WorkPlaceName, wp.domain_expertise AS WorkPlaceDomainExpertise, wp.size AS WorkPlaceSize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company with a size of 1000-5000 employees and have achieved a certification in Artificial Intelligence and have experience in Web Development?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {size: \"1000-5000\"})-[:Achieve]->(c:Certification {CATEGORY: \"Artificial Intelligence\"})-[:Experience]->(pos:Position {NAME: \"Web Development\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the educations that are relevant to Computer Vision skill?"}, {"role": "assistant", "content": "MATCH (e:Education)-[:Relevant_to]->(s:Skills {NAME: \"Computer Vision\"}) RETURN e.NAME AS EducationName, e.Field AS EducationField"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that a skill named Data Science is relevant to?"}, {"role": "assistant", "content": "MATCH (s:Skills {NAME: \"Data Science\"})-[:Relevant_to]->(pos:Position) RETURN s.NAME AS SkillName, s.category AS SkillCategory, pos.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a certification in Data Analysis?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Data Analysis\"}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who achieved a publication with a category = \"Machine Learning\"?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Machine Learning\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What work places has John Doe worked at in the field of Finance?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John Doe\"})-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Finance\"}) RETURN p.name AS PersonName, w.NAME AS WorkPlaceName, w.domain_expertise AS WorkPlaceDomainExpertise, w.size AS WorkPlaceSize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that require Python skills and have domain expertise in Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Python\"})-[:Relevant_to]->(wp:WorkPlace {domain_expertise: \"Artificial Intelligence\"}) RETURN pos.NAME AS PositionName, pos.description AS PositionDescription, wp.NAME AS WorkPlaceName, wp.size AS WorkPlaceSize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has a skill in Go?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Go\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has achieved a certification in Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Artificial Intelligence\"})-[:Relevant_to]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that require Python skills?"}, {"role": "assistant", "content": "MATCH (pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Python\"}) RETURN pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the positions that Jane has experienced?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Jane\"})-[:Experience]->(pos:Position) RETURN p.name AS PersonName, pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that are relevant to a position named Software Engineer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Software Engineer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all the people who have achieved a publication in the category of Information Retrieval?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: 'Information Retrieval'}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the achievements of the person who worked at PwC?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {NAME: \"PwC\"})-[:Achieve]->(ach:Certification) RETURN p.name AS PersonName, ach.CATEGORY AS AchievementCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has a skill in ASP.NET?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"ASP.NET\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of An that are relevant to either Software Engineer or Data Scientist, but not relevant to Product Manager, UX Designer, DevOps Engineer, Data Analyst, Business Analyst, or Operations Research Analyst?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"An\"})-[:Has]->(s:Skills)-[:Relevant_to]->(pos:Position) WHERE (pos.NAME = \"Software Engineer\" OR pos.NAME = \"Data Scientist\") AND NOT (s)-[:Relevant_to]->(:Position {NAME: \"Product Manager\"}) AND NOT (s)-[:Relevant_to]->(:Position {NAME: \"UX Designer\"}) AND NOT (s)-[:Relevant_to]->(:Position {NAME: \"DevOps Engineer\"}) AND NOT (s)-[:Relevant_to]->(:Position {NAME: \"Data Analyst\"}) AND NOT (s)-[:Relevant_to]->(:Position {NAME: \"Business Analyst\"}) AND NOT (s)-[:Relevant_to]->(:Position {NAME: \"Operations Research Analyst\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory, pos.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has a skill in Vue.js?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Vue.js\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all the people who have achieved a certification in a specific category and have a specific skill and work at a specific workplace and have a specific position and have a specific education and have a specific portfolio and have a specific phone number and have a specific location and have a specific summary?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Specific Category\"})-[:Relevant_to]->(s:Skills {NAME: \"Specific Skill\"})-[:Worked_at]->(w:WorkPlace {NAME: \"Specific Workplace\"})-[:Experience]->(pos:Position {NAME: \"Specific Position\"})-[:Study_at]->(e:Education {NAME: \"Specific Education\"})-[:Has]->(port:Skills {NAME: \"Specific Portfolio\"})-[:Has]->(ph:Skills {NAME: \"Specific Phone Number\"})-[:Has]->(loc:Skills {NAME: \"Specific Location\"})-[:Has]->(sum:Skills {NAME: \"Specific Summary\"}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory, s.NAME AS SkillName, w.NAME AS WorkplaceName, pos.NAME AS PositionName, e.NAME AS EducationName, port.NAME AS PortfolioName, ph.NAME AS PhoneNumber, loc.NAME AS LocationName, sum.NAME AS SummaryName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that require both Python and Java programming skills?"}, {"role": "assistant", "content": "MATCH (pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Python\"}), (pos)-[:Relevant_to]->(s2:Skills {NAME: \"Java\"}) RETURN pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a certification in Machine Learning, Artificial Intelligence, and have a skill in Data Engineering, Machine Learning, Artificial Intelligence, Data Engineering, and Machine Learning?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Machine Learning\"})-[:Relevant_to]->(s:Skills)-[:Relevant_to]->(c2:Certification {CATEGORY: \"Artificial Intelligence\"})-[:Relevant_to]->(s2:Skills {NAME: \"Data Engineering\"})-[:Relevant_to]->(s3:Skills {NAME: \"Machine Learning\"})-[:Relevant_to]->(s4:Skills {NAME: \"Artificial Intelligence\"})-[:Relevant_to]->(s5:Skills {NAME: \"Data Engineering\"})-[:Relevant_to]->(s6:Skills {NAME: \"Machine Learning\"}) RETURN p.name AS PersonName, c.CATEGORY AS CertificationCategory, c2.CATEGORY AS CertificationCategory2, s2.NAME AS SkillName, s3.NAME AS SkillName2, s4.NAME AS SkillName3, s5.NAME AS SkillName4, s6.NAME AS SkillName5"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the positions that are relevant to Business Intelligence?"}, {"role": "assistant", "content": "MATCH (pos:Position)-[:Relevant_to]->(s:Skills {NAME: \"Business Intelligence\"}) RETURN pos.NAME AS PositionName, pos.description AS PositionDescription, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who worked at a company with a size of 1000-5000 employees?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {size: \"1000-5000\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of a person who has worked at a company with more than 500 employees?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {size: \"500+\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the educations of a person named Lily who has studied at MIT?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Lily\"})-[:Study_at]->(e:Education {NAME: \"MIT\"}) RETURN p.name AS PersonName, e.NAME AS EducationName, e.Field AS EducationField"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the certifications that John has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Achieve]->(cert:Certification) RETURN p.name AS PersonName, cert.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a publication in the category of Algorithms?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Algorithms\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who achieved a certification in Data Science?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Data Science\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and their experience, education, job titles, and achievements?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"})-[:Study_at]->(e:Education) RETURN p.name AS PersonName, wp.duration AS WorkPlaceDuration, e.NAME AS EducationName, wp.NAME AS WorkPlaceName, wp.achievements AS WorkPlaceAchievements"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications that are relevant to the skill of Enterprise Architecture?"}, {"role": "assistant", "content": "MATCH (s:Skills {NAME: \"Enterprise Architecture\"})-[:Relevant_to]->(c:Certification) RETURN c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are all the workplaces that Bob has worked at?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Bob\"})-[:Worked_at]->(wp:WorkPlace) RETURN p.name AS PersonName, wp.NAME AS WorkPlaceName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that a skill named Machine Learning is relevant to?"}, {"role": "assistant", "content": "MATCH (s:Skills {NAME: \"Machine Learning\"})-[:Relevant_to]->(pos:Position) RETURN s.NAME AS SkillName, s.category AS SkillCategory, pos.NAME AS PositionName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company in the domain expertise of Finance?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Finance\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of the workplaces where John has worked, along with their domain expertise, size, and the skills relevant to the positions he has held, and the publications he has achieved, and the education he has received, and the experience he has gained, and the certifications he has achieved?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Worked_at]->(wp:WorkPlace)-[:Relevant_to]->(s:Skills)-[:Achieve]->(pub:Publication)-[:Study_at]->(e:Education)-[:Experience]->(ex:Experience)-[:Achieve]->(c:Certification) RETURN wp.NAME AS WorkplaceName, wp.domain_expertise AS DomainExpertise, wp.size AS WorkplaceSize, s.NAME AS SkillName, s.category AS SkillCategory, pub.CATEGORY AS PublicationCategory, e.NAME AS EducationName, e.Field AS EducationField, ex.ID AS ExperienceID, ex.duration AS ExperienceDuration, ex.responsibilities AS ExperienceResponsibilities, ex.achievements AS ExperienceAchievements, c.CATEGORY AS CertificationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the positions that An has experience in?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"An\"})-[:Experience]->(pos:Position) RETURN p.name AS PersonName, pos.NAME AS PositionName, pos.description AS PositionDescription"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who worked at a company with size 10000+ employees?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {size: \"10000+ employees\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "How many employees does the company that has been worked at by people who have achieved a certification in the category of Business Administration?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(c:Certification {CATEGORY: \"Business Administration\"})-[:Worked_at]->(wp:WorkPlace) RETURN wp.size AS CompanySize"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all the skills that are relevant to the Data Engineer position?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Data Engineer\"})-[:Relevant_to]->(s:Skills) RETURN s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have achieved a publication in Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Achieve]->(pub:Publication {CATEGORY: \"Engineering\"}) RETURN p.name AS PersonName, pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the name of the person who has worked at Apple?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Apple\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of a person who has worked at a company in the healthcare domain and has more than 2 years of experience?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {domain_expertise: \"healthcare\"})-[:Has]->(s:Skills) WHERE wp.duration > 2 RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who worked at a company with size > 1000?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {size: \"1000\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What is the name of the skill that is relevant to the position of DevOps Engineer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"DevOps Engineer\"})-[:Relevant_to]->(s:Skills) RETURN s.NAME AS SkillName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of companies where John has worked as a Software Engineer for more than 2 years and has a degree in Computer Science and has a certification in Java and has a skill in Python and has a portfolio in GitHub and has a location in San Francisco?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Worked_at]->(wp:WorkPlace)<-[:Experience]-(pos:Position {NAME: \"Software Engineer\"})-[:Study_at]->(edu:Education {Field: \"Computer Science\"})-[:Achieve]->(cert:Certification {CATEGORY: \"Java\"})-[:Has]->(s:Skills {NAME: \"Python\"})-[:Has]->(port:Portfolio {NAME: \"GitHub\"})-[:Has]->(loc:Location {NAME: \"San Francisco\"}) WHERE wp.duration > 2 RETURN wp.NAME AS CompanyName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the publications that have been achieved by people who have worked at Sonata Software?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Sonata Software\"})-[:Achieve]->(pub:Publication) RETURN pub.CATEGORY AS PublicationCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the certifications that John has achieved that are relevant to his work experience as a Financial Manager?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"John\"})-[:Experience]->(pos:Position {NAME: \"Financial Manager\"})-[:Relevant_to]->(s:Skills)<-[:Relevant_to]-(c:Certification) RETURN p.name AS PersonName, pos.NAME AS PositionName, c.CATEGORY AS CertificationCategory, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of all people who have worked at a workplace with domain expertise in Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Artificial Intelligence\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that are relevant to Data Analyst?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Data Analyst\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What city does Emily live in?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Emily\"}) RETURN p.location AS Location"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at a company with a domain expertise of Artificial Intelligence?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(w:WorkPlace {domain_expertise: \"Artificial Intelligence\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has a skill in Batman.js?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Batman.js\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have skills in the category of Human-Computer Interaction?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {category: \"Human-Computer Interaction\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Software Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Software Engineering\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What skills does Jane have?"}, {"role": "assistant", "content": "MATCH (p:Person {name: \"Jane\"})-[:Has]->(s:Skills) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of a Chief Financial Officer?"}, {"role": "assistant", "content": "MATCH (pos:Position {NAME: \"Chief Financial Officer\"})-[:Relevant_to]->(s:Skills) RETURN pos.NAME AS PositionName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have worked at Google and their achievements?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Worked_at]->(wp:WorkPlace {NAME: \"Google\"}) RETURN p.name AS PersonName, wp.achievements AS WorkPlaceAchievements"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Web Development?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Web Developer\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills that are most relevant to the position of Data Architect?"}, {"role": "assistant", "content": "MATCH (p:Position {NAME: \"Data Architect\"})-[:Relevant_to]->(s:Skills) RETURN s.NAME AS SkillName, s.category AS SkillCategory, COUNT(p) AS NumPositions ORDER BY NumPositions DESC"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the names of people who have experience in Machine Learning Engineering?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Experience]->(pos:Position {NAME: \"Machine Learning Engineering\"}) RETURN p.name AS PersonName"}]}
{"conversations": [{"role": "system", "content": "You are an experienced Cypher developer and English-speaking recruiter and a helpful assistant designed to output JSON.\nConsider the Neo4j graph database with the following schema:\n\nNode properties are the following:\n    Person {{ID: STRING, name: STRING, phone: STRING, dob: DATE, summary: STRING, location: STRING, portfolio: STRING}}\n    Publication {{CATEGORY: STRING}}\n    Certification {{CATEGORY: STRING}}\n    Education {{NAME: STRING, Field: STRING}}\n    WorkPlace {{NAME: STRING, domain_expertise: STRING, size: STRING}}\n    Skills {{NAME: STRING, category: STRING}}\n    Position {{NAME: STRING, description: STRING}}\n\nRelationship properties are the following:\n    Achieve {{CONFERENCE: STRING, Date: DATE}}\n    Study_at {{DEGREE: STRING, start_year: INT, end_year: INT, grade: STRING, achievement: STRING}}\n    Worked_at {{ID: STRING, duration: INT, role: STRING, start_date: DATE, end_date: DATE, responsibilities: STRING, achievements: STRING}}\n    Experience {{ID: STRING, duration: INT, responsibilities: STRING, achievements: STRING}}\n    Relevant_to {{no properties listed}}\n    Has {{no properties listed}}\n\nThe relationships are the following:\n    (:Person)-[:Achieve]->(:Publication)\n    (:Person)-[:Achieve]->(:Certification)\n    (:Person)-[:Has]->(:Skills)\n    (:Person)-[:Experience]->(:Position)\n    (:Person)-[:Worked_at]->(:WorkPlace)\n    (:Person)-[:Study_at]->(:Education)\n    (:Certification)-[:Relevant_to]->(:Skills)\n    (:Position)-[:Relevant_to]->(:Skills)\n\nWrite a Cypher query that would help you answer the following question:\n"}, {"role": "user", "content": "What are the skills of the person who has a skill in Entity Framework?"}, {"role": "assistant", "content": "MATCH (p:Person)-[:Has]->(s:Skills {NAME: \"Entity Framework\"}) RETURN p.name AS PersonName, s.NAME AS SkillName, s.category AS SkillCategory"}]}
